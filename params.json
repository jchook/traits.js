{"name":"Traits.js","tagline":"Horizontal inheritance for JavaScript","body":"traits.js\r\n=========\r\n\r\n## What does traits.js do?\r\n\r\nTraits.js makes it possible for you to have horizontal inheritance pattern in your class structures.\r\n\r\nWith traits, you may continue to use the vertical `this is a that` pattern, but you are no longer constrained to it. You may add as many traits as you like to an object, which truly widens the possibilities for producing simply [DRY](http://en.wikipedia.org/wiki/Don't_repeat_yourself) codebases.\r\n\r\n## Why use traits.js instead of xyz?\r\n\r\n* 42 lines of javascript, unminified\r\n* Fully-featured and to-specification\r\n* Use *any* javascript object as a Trait\r\n\r\n## What are some other features of traits.js?\r\n\r\n* Be notified of name conflicts\r\n* Resolve name conflicts explicitly\r\n* Understand the code in less than 10 minutes\r\n* Require classes to implement specific methods\r\n* Nest traits within other traits for good ol' vertical inheriance\r\n* Control visibility of trait methods (public or private) \r\n* Optionally influence instance state w/ small plugin\r\n\r\n## Show me some examples!\r\n\r\nSOON!\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}